Microsoft (R) Macro Assembler Version 6.15.8803		    11/07/22 14:52:32
C:\Users\jclar\MEGA\School\CS2290\Labs\Assignment 6\Part 4.asm  Page 1 - 1


				; Author: Jeremey Larter
				; Lab Assignment #6 Part 4 (The Game Version 1)
				; Purpose: Revamps the demo game from the previous part.
				; NOTE: Use an 80x25 (WxH) console window for the best result.
				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc		; (4/6/03)
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data

				; Memory locations.
 00000000 00			columnBegin	BYTE	0 ; DL
 00000001 4F			columnEnd	BYTE	79 ; DL
 00000002 59 6F 75 20 68	endMessage	BYTE	"You hit the boundary!", 0Ah, 0Dh, "Game Over!", 0Ah, 0Dh, 0
	   69 74 20 74 68
	   65 20 62 6F 75
	   6E 64 61 72 79
	   21 0A 0D 47 61
	   6D 65 20 4F 76
	   65 72 21 0A 0D
	   00
 00000026 27			position	BYTE	39 ; Used for keeping track of column. Initial value is starting location.
 00000027 53 63 6F 72 65	score		BYTE	"Score: ", 0
	   3A 20 00
 0000002F 00000000		bounces		DWORD	0

				; Macros.
 = 0000000B			ROW = 11 ; DH
 = 00000032			SPEED = 50 ; Change delay between movements in milliseconds.

 00000000			.code

				; Main procedure. Handles game over.
 00000000			main PROC
 00000000  EB 3E		jmp moveRight
 00000002			gameOver:: ; Global label.
 00000002  E8 00000000 E		call Clrscr
 00000007  BA 00000027 R		mov EDX, OFFSET score
 0000000C  E8 00000000 E		call WriteString
 00000011  A1 0000002F R		mov EAX, bounces
 00000016  E8 00000000 E		call WriteDec
 0000001B  E8 00000000 E		call Crlf
 00000020  BA 00000002 R		mov EDX, OFFSET endMessage
 00000025  E8 00000000 E		call WriteString
 0000002A  E8 00000000 E		call Crlf
 0000002F  E8 00000000 E		call WaitMsg
 00000034  E8 00000000 E		call Clrscr
					exit
 00000040			main ENDP

				; Moves a smiley face right across the screen.
 00000040			moveRight PROC
 00000040  E8 000000C1		call showScore
 00000045			Right:
 00000045  E8 00000102			call leftBarrier
 0000004A  E8 000000E8			call rightBarrier
 0000004F  8A 15 00000026 R		mov DL, position ; DL is set to position for seamless transition.
 00000055  B6 0B			mov DH, ROW ; So that the smiley face is in the middle heightwise.
 00000057  E8 00000000 E		call Gotoxy
 0000005C  B0 01			mov AL, 1 ; The ASCII character of the smiley face.
 0000005E  E8 00000000 E		call WriteChar
 00000063  B8 00000032			mov EAX, SPEED ; Delay in milliseconds.
 00000068  E8 00000000 E		call Delay
 0000006D  E8 00000000 E		call Gotoxy ; Go back one.
 00000072  B0 20			mov AL, 32 ; The ASCII character of space.
 00000074  E8 00000000 E		call WriteChar
 00000079  FE C2			inc DL
 0000007B  88 15 00000026 R		mov position, DL ; Saves DL to position as ReadKey overwrites the DX register.
 00000081  3A 15 00000001 R		cmp DL, columnEnd ; Column barrier initially is 79 (for an 80x25 screen). Decreases over time.
 00000087  0F 84 FFFFFF75		je gameOver
 0000008D  E8 00000000 E		call ReadKey ; Checks for key presses without an interrupt.
 00000092  3C 20			cmp AL, ' '
 00000094  0F 84 000000FD		je pauseRight
 0000009A  80 FC 26			cmp AH, 26h ; Virtual-scan code for l and L.
 0000009D  0F 84 000000BE		je setRight
 000000A3  EB A0			jmp Right
 000000A5			moveRight ENDP

				; Moves the smiley face left across the screen.
 000000A5			moveLeft PROC
 000000A5  E8 0000005C		call showScore
 000000AA			Left:
 000000AA  E8 0000009D			call leftBarrier
 000000AF  E8 00000083			call rightBarrier
 000000B4  8A 15 00000026 R		mov DL, position
 000000BA  B6 0B			mov DH, ROW
 000000BC  E8 00000000 E		call Gotoxy
 000000C1  B0 01			mov AL, 1
 000000C3  E8 00000000 E		call WriteChar
 000000C8  B8 00000032			mov EAX, SPEED
 000000CD  E8 00000000 E		call Delay
 000000D2  E8 00000000 E		call Gotoxy
 000000D7  FE CA			dec DL
 000000D9  B0 20			mov AL, 32
 000000DB  E8 00000000 E		call WriteChar
 000000E0  88 15 00000026 R		mov position, DL
 000000E6  3A 15 00000000 R		cmp DL, columnBegin
 000000EC  0F 84 FFFFFF10		je gameOver
 000000F2  E8 00000000 E		call ReadKey
 000000F7  3C 20			cmp AL, ' '
 000000F9  0F 84 000000A6		je pauseLeft
 000000FF  80 FC 1E			cmp AH, 1Eh ; Virtual-scan code for a and A.
 00000102  74 79			je setLeft
 00000104  EB A4			jmp Left
 00000106			moveLeft ENDP

				; Shows the user's current score.
 00000106			showScore PROC
 00000106  66| BA 0000		mov DX, 0
 0000010A  E8 00000000 E	call Gotoxy
 0000010F  BA 00000027 R	mov EDX, OFFSET score
 00000114  E8 00000000 E	call WriteString
 00000119  A1 0000002F R	mov EAX, bounces
 0000011E  E8 00000000 E	call WriteDec
 00000123  C3			ret
 00000124			showScore ENDP

				; Increses the score with every direction switch. Direction is determined with the AL register.
 00000124			increaseScore PROC
 00000124  FF 05 0000002F R	inc bounces
 0000012A  3C 01		cmp AL, 1
 0000012C  0F 85 FFFFFF0E	jne moveRight
 00000132  E9 FFFFFF6E		jmp moveLeft
 00000137			increaseScore ENDP

				; Shows the right barrier.
 00000137			rightBarrier PROC
 00000137  8A 15 00000001 R	mov DL, columnEnd
 0000013D  B6 0B		mov DH, ROW
 0000013F  E8 00000000 E	call Gotoxy
 00000144  B0 DD		mov AL, 221
 00000146  E8 00000000 E	call WriteChar
 0000014B  C3			ret
 0000014C			rightBarrier ENDP

				; Shows the left barrier.
 0000014C			leftBarrier PROC
 0000014C  8A 15 00000000 R	mov DL, columnBegin
 00000152  B6 0B		mov DH, ROW
 00000154  E8 00000000 E	call Gotoxy
 00000159  B0 DE		mov AL, 222  
 0000015B  E8 00000000 E	call WriteChar
 00000160  C3			ret
 00000161			leftBarrier ENDP

				; Changes the right boundary based on where the smiley face is bounced.
 00000161			setRight PROC
 00000161  8A 35 00000001 R	mov DH, columnEnd
 00000167  FE CE		dec DH
 00000169  8A 15 00000026 R	mov DL, position
 0000016F  B0 01		mov AL, 1 ; AL is used in increaseScore to know which direction the smiley face moves.
 00000171  38 F2		cmp DL, DH
 00000173  74 AF		je increaseScore
 00000175  88 15 00000001 R	mov columnEnd, DL
 0000017B  EB A7		jmp increaseScore
 0000017D			setRight ENDP

				; Changes the left boundary based on where the smiley face is bounced.
 0000017D			setLeft PROC
 0000017D  8A 35 00000000 R	mov DH, columnBegin
 00000183  FE C6		inc DH
 00000185  8A 15 00000026 R	mov DL, position
 0000018B  38 F2		cmp DL, DH
 0000018D  74 95		je increaseScore
 0000018F  88 15 00000000 R	mov columnBegin, DL
 00000195  EB 8D		jmp increaseScore
 00000197			setLeft ENDP

				; Pause for the smiley face moving right. Also fixes the smiley face disappearing.
 00000197			pauseRight PROC
 00000197  B0 01		mov AL, 1
 00000199  E8 00000000 E	call WriteChar
 0000019E  B9 00000000		mov ECX, 0
 000001A3  EB 19		jmp space
 000001A5			pauseRight ENDP

				; Pause for the smiley face moving left. Same fix as above for the smiley face.
 000001A5			pauseLeft PROC
 000001A5  8A 15 00000026 R	mov DL, position
 000001AB  B6 0B		mov DH, ROW
 000001AD  E8 00000000 E	call Gotoxy
 000001B2  B0 01		mov AL, 1
 000001B4  E8 00000000 E	call WriteChar
 000001B9  B9 00000001		mov ECX, 1
 000001BE			pauseLeft ENDP

				; Infinite loop for the pause.
 000001BE			space PROC
 000001BE  E8 00000000 E	call ReadKey
 000001C3  3C 20		cmp AL, ' '
 000001C5  75 F7		jne space
 000001C7			space ENDP

				; Unpause and continue moving the smiley face in the last direction.
 000001C7			return PROC
 000001C7  83 F9 00		cmp ECX, 0
 000001CA  0F 84 FFFFFE70	je moveRight
 000001D0  0F 85 FFFFFECF	jne moveLeft
 000001D6			return ENDP

				END main
Microsoft (R) Macro Assembler Version 6.15.8803		    11/07/22 14:52:32
C:\Users\jclar\MEGA\School\CS2290\Labs\Assignment 6\Part 4.asm  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
INPUT_RECORD . . . . . . . . . .	 00000014
  eventType  . . . . . . . . . .	 00000000	 Word
  event  . . . . . . . . . . . .	 00000004	  00000010
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000033 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001D6 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandtail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
increaseScore  . . . . . . . . .	P Near	 00000124 _TEXT	Length= 00000013 Public STDCALL
leftBarrier  . . . . . . . . . .	P Near	 0000014C _TEXT	Length= 00000015 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000040 Public STDCALL
moveLeft . . . . . . . . . . . .	P Near	 000000A5 _TEXT	Length= 00000061 Public STDCALL
  Left . . . . . . . . . . . . .	L Near	 000000AA _TEXT	
moveRight  . . . . . . . . . . .	P Near	 00000040 _TEXT	Length= 00000065 Public STDCALL
  Right  . . . . . . . . . . . .	L Near	 00000045 _TEXT	
pauseLeft  . . . . . . . . . . .	P Near	 000001A5 _TEXT	Length= 00000019 Public STDCALL
pauseRight . . . . . . . . . . .	P Near	 00000197 _TEXT	Length= 0000000E Public STDCALL
return . . . . . . . . . . . . .	P Near	 000001C7 _TEXT	Length= 0000000F Public STDCALL
rightBarrier . . . . . . . . . .	P Near	 00000137 _TEXT	Length= 00000015 Public STDCALL
setLeft  . . . . . . . . . . . .	P Near	 0000017D _TEXT	Length= 0000001A Public STDCALL
setRight . . . . . . . . . . . .	P Near	 00000161 _TEXT	Length= 0000001C Public STDCALL
showScore  . . . . . . . . . . .	P Near	 00000106 _TEXT	Length= 0000001E Public STDCALL
space  . . . . . . . . . . . . .	P Near	 000001BE _TEXT	Length= 00000009 Public STDCALL
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LIGHT_BLUE . . . . . . . . . . .	Number	 00000009h   
LIGHT_CYAN . . . . . . . . . . .	Number	 0000000Bh   
LIGHT_GRAY . . . . . . . . . . .	Number	 00000007h   
LIGHT_GREEN  . . . . . . . . . .	Number	 0000000Ah   
LIGHT_MAGENTA  . . . . . . . . .	Number	 0000000Dh   
LIGHT_RED  . . . . . . . . . . .	Number	 0000000Ch   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ROW  . . . . . . . . . . . . . .	Number	 0000000Bh   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SPEED  . . . . . . . . . . . . .	Number	 00000032h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bounces  . . . . . . . . . . . .	DWord	 0000002F _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
columnBegin  . . . . . . . . . .	Byte	 00000000 _DATA	
columnEnd  . . . . . . . . . . .	Byte	 00000001 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
endMessage . . . . . . . . . . .	Byte	 00000002 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gameOver . . . . . . . . . . . .	L Near	 00000002 _TEXT	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
position . . . . . . . . . . . .	Byte	 00000026 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
score  . . . . . . . . . . . . .	Byte	 00000027 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
